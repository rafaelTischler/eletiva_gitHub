git config: Configura as informações do usuário, como nome e email.
Exemplo: git config --global user.name "Seu Nome"
         git config --global user.email "seuemail@email.com"

git clone: Clona um repositório existente.
Exemplo: git clone https://github.com/usuario/repo.git

git init: Inicializa um novo repositório Git no diretório atual.
Exemplo: git init

git status: Verifica o estado atual do repositório, mostrando arquivos modificados e não rastreados.
Exemplo: git status
  
git add <arquivo>: Adiciona um arquivo específico à área de stage.
Exemplo: git add index.html

git commit -m "mensagem": Grava as mudanças da área de stage no repositório com uma mensagem descritiva.
Exemplo: git commit -m "Commit inicial"

git log: Exibe o histórico de commits do repositório.
Exemplo: git log

git diff: Mostra as diferenças entre o diretório de trabalho e a área de stage[^1^][1].
Exemplo: git diff
  
git rm <arquivo>: Remove um arquivo do repositório e da área de stage.
Exemplo: git rm produtos.html

git checkout: Troca de branch ou restaura arquivos.
Exemplo: git checkout nova-branch
  
git mv <arquivo> <novo_nome>: Renomeia ou move um arquivo.
Exemplo: git mv estilos.css principal.css  

git reset: Remove arquivos da área de stage, preservando as mudanças.
Exemplo: git reset
     
git revert <commit>: Desfaz as mudanças de um commit específico.
Exemplo: git revert 7b750f3

git remote add origin: adiciona um repositório local à um remoto
git remote add origin "https://linkdorepositorio"

git remote -v: diz se o respositorio local esta ou não vinculado a um repositorio remoto
Ex: origin  https://github.com/rafaelTischler/eletiva_gitHub.git (fetch) *pegar 
    origin  https://github.com/rafaelTischler/eletiva_gitHub.git (push) *enviar

git remote add nomequalquer https://github.com/rafaelTischler/remote2_eletivaGit.git: add um repositorio local à outro remoto

git remote rm nomequalquer: remove o link remoto

git branch: lista as branchs

git branch -v: lista as branchs e os ultimos commits

git branch design: cria a branch design

git checkout design: troca o cabeçalho pr adesign

git checkout -b nova: cria e ja troca pra branch nova

git branch -d nova: deleta


git branch --no-merged : mostra as branch nao mescladas

git branch --merged : mostra as branch  mescladas

$ git log --oneline --decorate --parents:  mostra os pais e filhos de cada commit


git rebase design: remove os commits de merge da branch design

$ git reflog: mostra os logs com referencia


 git reset HEAD@{3} --hard: desfaz um rebase




